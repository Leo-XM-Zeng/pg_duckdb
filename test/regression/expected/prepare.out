-- the view should return the empty
SELECT name, statement, parameter_types FROM pg_prepared_statements;
 name | statement | parameter_types 
------+-----------+-----------------
(0 rows)

CREATE TABLE copy_database(datname text, datistemplate boolean, datallowconn boolean);
INSERT INTO copy_database SELECT datname, datistemplate, datallowconn FROM pg_database;
-- parameterized queries
PREPARE q1(text) AS
	SELECT datname, datistemplate, datallowconn
	FROM copy_database WHERE datname = $1;
EXECUTE q1('postgres');
 datname  | datistemplate | datallowconn 
----------+---------------+--------------
 postgres | f             | t
(1 row)

-- q1
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name |                      statement                      | parameter_types 
------+-----------------------------------------------------+-----------------
 q1   | PREPARE q1(text) AS                                +| {text}
      |         SELECT datname, datistemplate, datallowconn+| 
      |         FROM copy_database WHERE datname = $1;      | 
(1 row)

CREATE TABLE ta(a int);
INSERT INTO ta(a) SELECT * FROM generate_series(1, 1000);
SELECT COUNT(*) FROM ta;
 count 
-------
  1000
(1 row)

PREPARE q2 AS SELECT COUNT(*) FROM ta;
EXECUTE q2;
 count 
-------
  1000
(1 row)

-- q1 q2
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name |                      statement                      | parameter_types 
------+-----------------------------------------------------+-----------------
 q1   | PREPARE q1(text) AS                                +| {text}
      |         SELECT datname, datistemplate, datallowconn+| 
      |         FROM copy_database WHERE datname = $1;      | 
 q2   | PREPARE q2 AS SELECT COUNT(*) FROM ta;              | {}
(2 rows)

PREPARE q3(int) AS
	SELECT * FROM ta WHERE a = $1;
CREATE TEMPORARY TABLE q3_prep_results AS EXECUTE q3(200);
SELECT * FROM q3_prep_results;
  a  
-----
 200
(1 row)

-- q1 q2 q3
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name |                      statement                      | parameter_types 
------+-----------------------------------------------------+-----------------
 q1   | PREPARE q1(text) AS                                +| {text}
      |         SELECT datname, datistemplate, datallowconn+| 
      |         FROM copy_database WHERE datname = $1;      | 
 q2   | PREPARE q2 AS SELECT COUNT(*) FROM ta;              | {}
 q3   | PREPARE q3(int) AS                                 +| {integer}
      |         SELECT * FROM ta WHERE a = $1;              | 
(3 rows)

CREATE TABLE tb (a int DEFAULT 1, b int, c varchar DEFAULT 'pg_duckdb');
INSERT INTO tb(b) VALUES(2);
PREPARE q4(int, varchar) AS
	SELECT b FROM tb WHERE a = $1 AND c = $2;
EXECUTE q4(1, 'pg_duckdb');
 b 
---
 2
(1 row)

EXECUTE q4(1, 'pg_duckdb');
 b 
---
 2
(1 row)

-- q1 q2 q3 q4
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name |                      statement                      |        parameter_types        
------+-----------------------------------------------------+-------------------------------
 q1   | PREPARE q1(text) AS                                +| {text}
      |         SELECT datname, datistemplate, datallowconn+| 
      |         FROM copy_database WHERE datname = $1;      | 
 q2   | PREPARE q2 AS SELECT COUNT(*) FROM ta;              | {}
 q3   | PREPARE q3(int) AS                                 +| {integer}
      |         SELECT * FROM ta WHERE a = $1;              | 
 q4   | PREPARE q4(int, varchar) AS                        +| {integer,"character varying"}
      |         SELECT b FROM tb WHERE a = $1 AND c = $2;   | 
(4 rows)

-- test DEALLOCATE ALL;
DEALLOCATE ALL;
SELECT name, statement, parameter_types FROM pg_prepared_statements
    ORDER BY name;
 name | statement | parameter_types 
------+-----------+-----------------
(0 rows)

DROP TABLE copy_database, ta, tb;
